const ownServerGridData=["OS + apps","Unix/OSX + docker + nvidia-docker","Free space","100 GB of free space","CPU","4 cores or more (e.g. intel core i5)","Graphics hardware","GPU: NVidia only 2Gb+","Memory","16 GB RAM"],amazonInstanceData=["Instance","g4dn.xlarge","Memory","16 GB RAM","GPU","1","Storage","125 GB","vCPUs","4"],firstNavButtonSelector=".Task__technicalRequirementsNavButton",containerToSetGridSelector=".Task__requirementsGrid",activeNavButtonSelector="Task__technicalRequirementsNavButton_active",firstNavButton=document.querySelector(firstNavButtonSelector),containerToSetGrid=document.querySelector(".Task__requirementsGrid"),createGridItem=(e,t="")=>`\n<div class="Task__requirementsGridItem">\n    <h3 class="Task__requirementsGridItemText">${e}</h3>\n    <p class="Task__requirementsGridItemText">${t}</p>\n</div>`,createGrid=e=>e.map(((t,r)=>{if(r%2==0){const a=e[r+1];return a?createGridItem(t,a):createGridItem(t)}})).join(""),handleChangeButtonActivity=e=>{const t=Array.from(e[0].target.classList).includes(activeNavButtonSelector);containerToSetGrid.innerHTML=t?containerToSetGrid.innerHTML=createGrid(ownServerGridData):createGrid(amazonInstanceData)},mutationObserver=new MutationObserver(handleChangeButtonActivity);mutationObserver.observe(firstNavButton,{attributes:!0});